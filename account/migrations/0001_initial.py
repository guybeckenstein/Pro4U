# Generated by Django 4.2.2 on 2023-06-15 18:10

import account.models.user
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("phone_number", models.CharField(max_length=12, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("date_of_birth", models.DateField(null=True)),
                ("image", models.ImageField(default="default.png", upload_to="profile_pics")),
                ("data_join", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Client"), (2, "Professional")], default=1
                    ),
                ),
                ("first_name", models.CharField(max_length=20)),
                ("last_name", models.CharField(max_length=20)),
                ("country", models.CharField(blank=True, max_length=20, null=True)),
                ("city", models.CharField(blank=True, max_length=20, null=True)),
                ("address", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "User",
            },
            managers=[
                ("objects", account.models.user.UserCustomManager()),
            ],
        ),
        migrations.CreateModel(
            name="Professional",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "profession",
                    models.CharField(
                        choices=[
                            ("PLU", "Plumber"),
                            ("GAR", "Gardener"),
                            ("ELE", "Electrician"),
                            ("TIN", "Tinsmith"),
                            ("PAI", "Painter"),
                            ("LOC", "Locksmith"),
                            ("EXT", "Exterminator"),
                            ("GAT", "GasTechnician"),
                            ("ACT", "AirConditioningTechnician"),
                            ("RET", "RefrigeratorTechnician"),
                            ("CLE", "Cleaner"),
                            ("HAN", "Handyman"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Professional",
            },
        ),
    ]
